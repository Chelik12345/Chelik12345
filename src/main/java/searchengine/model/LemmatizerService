package com.example.service;

import org.apache.lucene.morphology.LuceneMorphology;
import org.apache.lucene.morphology.RussianLuceneMorphology;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Service
public class LemmatizerService {
    private final LuceneMorphology luceneMorphology;

    public LemmatizerService() throws Exception {
        this.luceneMorphology = new RussianLuceneMorphology();
    }

    public Map<String, Integer> lemmatize(String text) {
        Map<String, Integer> lemmaCountMap = new HashMap<>();
        String[] words = text.split("\\W+");

        for (String word : words) {
            List<String> normalForms = luceneMorphology.getNormalForms(word.toLowerCase());
            for (String lemma : normalForms) {
                if (lemmaCountMap.containsKey(lemma)) {
                    lemmaCountMap.put(lemma, lemmaCountMap.get(lemma) + 1);
                } else {
                    lemmaCountMap.put(lemma, 1);
                }
            }
        }
        return lemmaCountMap;
    }
}
